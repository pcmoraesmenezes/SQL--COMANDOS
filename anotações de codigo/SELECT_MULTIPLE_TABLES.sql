/*
 * SELECT DE VARIAS TABELAS
 * COMO O NOME DIZ, IREMOS FAZER UMA CONSULTA DE MULTIPLAS TABELAS
 * MUITAS INFORMAÇÕES INTERESSANTES ESTÃO DISPONIVEIS NA PAGINA 7 DAS ANOTAÇÕES!
 * BASICAMENTE DEVE-SE TER EM MENTE QUE É NECESSÁRIO UM FILTRO PARA OS REGISTROS, PARA EVITAR QUE CAMPOS DE TABELAS DIFERENTES POSSUAM O MESMO NOME
 * POIS TABELAS COM CAMPOS DE MESMO NOME ACARRETAM PROBLEMAS DE SOBRESCRITA.
*/

-- EXEMPLO DE UMA TABELA SEM FILTRO

SELECT * FROM users as u, profiles as p; -- NOTE A INCONSISTENCIA DOS DADOS, ORDENE E VEJA QUE TEMOS VARIOS DADOS REPETIDOS, ALÉM DISSO, TEMOS 
-- DOIS CAMPOS COM NOMES DE ID E TEMOS UM PRODUTO CARTESIANO ENTRE ESSES DADOS O QUE ESTÁ ACARRETANDO EM MULTIPLOS DADOS REPETIDOS

-- COMO CONTORNAR ESSE PROBLEMA?

-- 1) VAMOS DAR ENFASE NOS CAMPOS ID DAS DIFERENTES TABELAS:

SELECT u.id, p.id
FROM users as u, profiles as p; -- JÁ CONSEGUIMOS VER MELHOR O PRODUTO CARTESIANO DOS DADOS, AGORA VAMOS ALTERAR O NOME DE EXIBIÇÃO DAS TABELAS

SELECT u.id as uid, p.id as pid
FROM users as u, profiles as p; -- CONSEGUIMOS JÁ ALTERAR OS NOMES DOS IDS PARA EVITAR INCONSISTENCIA, MAS AGORA VAMOS RESOLVER A QUESTÃO DO PRODUTO CARTESIANO

-- PARA ISSO DEVEMOS ADICIONAR UM FILTRO TEMOS QUE TER UMA COISA EM MENTE - QUAL A RELAÇÃO ENTRE UMA TABELA E A OUTRA?

-- VAMOS ANALISAR ESSA TABELA, VEMOS QUE A FOREIGN KEY DE USER_ID É A PRIMARY KEY DE USERS


SELECT u.id as uid, p.id as pid
FROM users as u, profiles as p
WHERE u.id = p.user_id ; -- DESSA FORMA ESTAMOS FILTRANDO PARA QUE SEJA EXIBIDO APENAS OS USUARIOS COM ID IGUAIS AO USER_ID DE PROFILES 
